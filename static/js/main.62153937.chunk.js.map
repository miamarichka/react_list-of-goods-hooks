{"version":3,"sources":["App.tsx","Good.tsx","GoodList.tsx","index.tsx"],"names":["SortType","Good","good","GoodsList","goods","map","goodsFromServer","App","useState","NONE","sortType","setSortType","isReversed","setReversed","goodsToRender","visibleGoods","sort","g1","g2","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","wasItSorted","className","type","onClick","classNames","prevState","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,4ECbQC,EAAwB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACtC,OAAO,oBAAI,UAAQ,OAAZ,SAAoBA,KCAhBC,EAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC3C,OACE,6BACGA,EAAMC,KAAI,SAACH,GACV,OAAO,cAAC,EAAD,CAAiBA,KAAMA,GAAZA,SFLbI,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAML,IAyBaO,EAAgB,WAC3B,MAAgCC,mBAASR,EAASS,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAkCH,oBAAS,GAA3C,mBAAOI,EAAP,KAAmBC,EAAnB,KAmBMC,EA9CkB,SACxBV,EACAM,EACAE,GAEA,IAAMG,EAAY,YAAOX,GAiBzB,OAfAW,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAQR,GACN,KAAKV,EAASmB,SACZ,OAAOF,EAAGG,cAAcF,GAC1B,KAAKlB,EAASqB,OACZ,OAAOJ,EAAGK,OAASJ,EAAGI,OACxB,QACE,OAAO,MAITV,GACFG,EAAaQ,UAGRR,EAyBDS,CAAkBlB,EAAiBI,EAAUE,GAE7Ca,EAAcf,IAAaV,EAASS,OAASG,EAEnD,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAvBW,WACjBjB,EAAYX,EAASmB,WAuBfO,UAAWG,IAAW,SAAU,UAAW,CACzC,WAAYnB,IAAaV,EAASmB,WAJtC,iCAUA,wBACEQ,KAAK,SACLC,QA7Ba,WACnBjB,EAAYX,EAASqB,SA6BfK,UAAWG,IAAW,SAAU,aAAc,CAC5C,WAAYnB,IAAaV,EAASqB,SAJtC,4BAUA,wBACEM,KAAK,SACLC,QA/CQ,WACdf,GAAY,SAACiB,GAAD,OAAgBA,MA+CtBJ,UAAWG,IAAW,SAAU,aAAc,CAC5C,YAA2B,IAAfjB,IAJhB,sBAUEa,GACA,wBACEE,KAAK,SACLC,QA9CI,WACZf,GAAY,GACZF,EAAYX,EAASS,OA6CbiB,UAAU,4BAHZ,sBAUJ,cAAC,EAAD,CAAWtB,MAAOU,QGrHxBiB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.62153937.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport classNames from 'classnames';\nimport './App.scss';\nimport { GoodsList } from './GoodList';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nconst getReorderedGoods = (\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) => {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((g1, g2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return g1.localeCompare(g2);\n      case SortType.LENGTH:\n        return g1.length - g2.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n};\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setReversed] = useState(false);\n\n  const reverse = () => {\n    setReversed((prevState) => !prevState);\n  };\n\n  const sortByName = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const sortByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const reset = () => {\n    setReversed(false);\n    setSortType(SortType.NONE);\n  };\n\n  const goodsToRender\n      = getReorderedGoods(goodsFromServer, sortType, isReversed);\n\n  const wasItSorted = sortType === SortType.NONE && !isReversed;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          onClick={sortByName}\n          className={classNames('button', 'is-info', {\n            'is-light': sortType !== SortType.ALPHABET,\n          })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={sortByLength}\n          className={classNames('button', 'is-success', {\n            'is-light': sortType !== SortType.LENGTH,\n          })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={reverse}\n          className={classNames('button', 'is-warning', {\n            'is-light': isReversed === false,\n          })}\n        >\n          Reverse\n        </button>\n\n        {!wasItSorted && (\n          <button\n            type=\"button\"\n            onClick={reset}\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <GoodsList goods={goodsToRender} />\n    </div>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  good: string,\n};\n\nexport const Good: React.FC<Props> = ({ good }) => {\n  return <li data-cy=\"Good\">{good}</li>;\n};\n","import React from 'react';\nimport { Good } from './Good';\n\ntype Props = {\n  goods: string[],\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => {\n  return (\n    <ul>\n      {goods.map((good) => {\n        return <Good key={good} good={good} />;\n      })}\n    </ul>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}